---
title: "Scheduling Scripts"
date: "2023-11-02"
author: "Neha Moopen & Jelle Treep"
format: "html"
---

::: {.callout-note icon=false}

- **Date:** Wednesday, 2nd November 2023
- **Time:** 15:00-17:00
- **Location:** Bestuursgebouw ~~Bucheliuszaal 6.18, University Library (Utrecht Science Park)~~
- **Presentation:** Scheduling Scripts
- **Presenter:** Neha Mooopen & Jelle Treep

:::

Automate the boring things using the schedulers on your computers!

In this edition of the Programming Cafe, we familiarized ourselves with the schedulers available on our operating systems. _Windows Task Scheduler_ & `cron`. We learnt how we could use these schedulers to automate the execution of scripts. We also touched upon scheduling `cron` jobs with GitHub Actions.

## Slides

```{=html}
<iframe width="900" height="600" src="../../presentations/2023-11-02_scheduling-scripts/slides/2023-11-02_scheduling-scripts.html"></iframe>
```

## Exercise

After the presentation, we invite you to try out the scheduler on your operating system yourself! 

We have prepared some R & Python scripts that you can utilize for this. You can download the materials here: [exercises.zip](https://github.com/UtrechtUniversity/programming-cafe/raw/main/site/presentations/2023-11-02_scheduling-scripts/exercises/scheduling-scripts.zip). 

Don't forget to unzip the folder to an accessible location on your system.

### Windows

::: {.panel-tabset}

#### R

1. Go to `windows/r` and double-click on `scheduling-scripts.Rproj` to open RStudio.

2. Open the `countdown.R` script from your _Files_ pane and run the script once to make sure it works.

3. If the script works fine, you can try scheduling it using _Windows Task Scheduler_.

#### Python

1. Go to `windows/python` and double-click on `countdown.py` to open it.

2. Run the script to make sure it works.

3. If the script works fine, you can try scheduling it using _Windows Task Scheduler_.

:::

### MacOS

::: {.panel-tabset}

#### R

1. Go to `macos/r` and double-click on `scheduling-scripts.Rproj` to open RStudio.

2. Open the `countdown.R` script from your _Files_ pane and run the script once to make sure it works.

3. If the script works fine, you can try scheduling it using `cron`. 

#### Python

1. Go to `macos/python` and double-click on `countdown.py` to open it.

2. Run the script to make sure it works.

3. If the script works fine, you can try scheduling it using `cron`.

:::

### Linux

::: {.panel-tabset}

#### R

1. Go to `linux/r` and double-click on `scheduling-scripts.Rproj` to open RStudio.

2. Open the `countdown.R` script from your _Files_ pane and run the script once to make sure it works.

3. If the script works fine, you can try scheduling it using `cron`. 

#### Python

1. Go to `linux/python` and double-click on `countdown.py` to open it.

2. Run the script to make sure it works.

3. If the script works fine, you can try scheduling it using `cron`.

:::

## References

1. <https://www.tomsguide.com/how-to/how-to-use-task-scheduler-on-windows>

2. <https://itsfoss.com/cron-job/>